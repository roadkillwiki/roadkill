@model PluginViewModel

@{
    string title = string.Format(SiteStrings.SiteSettings_Plugins_Edit_Title, Model.Name);
	ViewBag.Title = title;
	ViewData["PluginSettingsActive"] = true;
}

@Html.SiteSettingsNavigation()
@Html.ActionLink(string.Format("< {0}", SiteStrings.SiteSettings_Plugins_Edit_BackLink), "Index")

@using (Html.BeginForm("Edit", "PluginSettings"))
{
    @Html.Hidden("Id", Model.Id)
    <fieldset>
	    <legend>@title</legend>

        <label for="IsEnabled" class="checkbox">
            @SiteStrings.SiteSettings_Plugins_Edit_Enabled_Label
            @Html.CheckBox("IsEnabled", Model.IsEnabled)
        </label>
        <br/>

	    @for (int i = 0; i < Model.SettingValues.Count(); i++)
	    {
		    <div>
                <label for="SettingValues[@i].Value">@Model.SettingValues[i].Name</label>

		        <input type="hidden" name="SettingValues[@i].Name" value="@Model.SettingValues[i].Name"/>
                @switch (Model.SettingValues[i].FormType)
                {
                    case SettingFormType.Checkbox:
                        @Html.CheckBox(String.Format("SettingValues[{0}].Value", i), bool.Parse(Model.SettingValues[i].Value));
                        break;
                    case SettingFormType.Textarea:
                        <textarea rows="5" cols="25" name="SettingValues[@i].Value">Model.SettingValues[i].Value</textarea>
                        break;
                    default:
                        <input type="text" name="SettingValues[@i].Value" value="@Model.SettingValues[i].Value"/>
                        break;
                }
		    </div>
	    }
    </fieldset>
    
    <input id="pluginsettings-save" type="submit" class="btn btn-primary" value="@SiteStrings.Button_Save" />
}